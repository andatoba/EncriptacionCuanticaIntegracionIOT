apiVersion: apps/v1
kind: Deployment
metadata:
  name: orion-context-broker
  namespace: quantum-access-control
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orion-context-broker
  template:
    metadata:
      labels:
        app: orion-context-broker
    spec:
      containers:
      - name: orion
        image: arm64v8/python:3.9-alpine
        ports:
        - containerPort: 1026
        command: ["/bin/sh", "-c"]
        args:
          - |
            apk add --no-cache curl
            pip install flask requests
            cat > /app.py << 'EOF'
            #!/usr/bin/env python3
            from flask import Flask, request, jsonify
            import json, os, requests, logging
            
            app = Flask(__name__)
            logging.basicConfig(level=logging.INFO)
            
            @app.route('/v2/entities', methods=['POST'])
            def create_entity():
                logging.info(f"Received entity: {request.json}")
                return "", 201
                
            @app.route('/v2/entities', methods=['GET'])
            def get_entities():
                return jsonify([]), 200
                
            @app.route('/version', methods=['GET'])
            def get_version():
                return jsonify({"version": "Orion-LD 1.0.0-ARM-Simplified"}), 200
                
            if __name__ == '__main__':
                app.run(host='0.0.0.0', port=1026)
            EOF
            python /app.py
        resources:
          limits:
            memory: 300Mi
            cpu: 200m
          requests:
            memory: 150Mi
            cpu: 50m
